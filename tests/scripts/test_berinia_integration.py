#!/usr/bin/env python3
"""
Script de test pour v√©rifier l'int√©gration avec la base de donn√©es Berinia.
Ce script teste l'exportation des leads dans la base de donn√©es Berinia.
"""

import os
import sys
import json
from datetime import datetime

# Ajouter le r√©pertoire racine au chemin Python
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), "../..")))

try:
    from integrations.berinia.db_connector import export_leads_to_berinia, test_berinia_connection
    INTEGRATION_AVAILABLE = True
except ImportError as e:
    print(f"‚ö†Ô∏è Erreur lors de l'importation du module d'int√©gration: {str(e)}")
    INTEGRATION_AVAILABLE = False

# Donn√©es de test
TEST_LEADS = [
    {
        "id": "test-lead-1",
        "company_name": "Entreprise Test 1",
        "contact_name": "Jean Dupont",
        "email": "jean.dupont@example.com",
        "phone": "+33123456789",
        "website": "https://example.com",
        "campaign_id": 1
    },
    {
        "id": "test-lead-2",
        "company_name": "Entreprise Test 2",
        "contact_name": "Marie Martin",
        "email": "marie.martin@example.com",
        "phone": "+33987654321",
        "website": "https://example2.com",
        "campaign_id": 1
    }
]

def test_berinia_integration():
    """
    Teste l'int√©gration avec la base de donn√©es Berinia
    """
    if not INTEGRATION_AVAILABLE:
        print("‚ö†Ô∏è Module d'int√©gration non disponible. Test impossible.")
        return False
    
    print("üîç Test de connexion √† la base de donn√©es Berinia...")
    connection_success = test_berinia_connection()
    
    if not connection_success:
        print("‚ùå √âchec de la connexion √† la base de donn√©es")
        return False
    
    print("‚úÖ Connexion √† la base de donn√©es r√©ussie")
    
    # Test d'exportation des leads
    print(f"üîç Test d'exportation de {len(TEST_LEADS)} leads...")
    export_result = export_leads_to_berinia(TEST_LEADS)
    
    if not export_result.get("success", False):
        print(f"‚ùå √âchec de l'exportation: {export_result.get('error', 'Erreur inconnue')}")
        return False
    
    print(f"‚úÖ Exportation r√©ussie: {export_result.get('leads_count', 0)} leads export√©s")
    print(f"üìä R√©sultats: {json.dumps(export_result, indent=2)}")
    
    return True

if __name__ == "__main__":
    print("=== Test d'int√©gration avec Berinia ===")
    print(f"üìÖ Date: {datetime.now().isoformat()}")
    
    success = test_berinia_integration()
    
    print("\n=== R√©sultat du test ===")
    if success:
        print("‚úÖ Test r√©ussi - L'int√©gration fonctionne correctement")
        sys.exit(0)
    else:
        print("‚ùå Test √©chou√© - L'int√©gration ne fonctionne pas correctement")
        sys.exit(1)
