#!/usr/bin/env python3
"""
Script pour ins√©rer des leads de test dans la base de donn√©es Berinia.
Utilis√© pour v√©rifier que l'int√©gration fonctionne correctement.
"""

import os
import sys
import json
from datetime import datetime

# Ajouter le r√©pertoire racine au chemin Python
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), "../..")))

try:
    from integrations.berinia.db_connector import export_leads_to_berinia, test_berinia_connection
    INTEGRATION_AVAILABLE = True
except ImportError as e:
    print(f"‚ö†Ô∏è Erreur lors de l'importation du module d'int√©gration: {str(e)}")
    INTEGRATION_AVAILABLE = False

# Donn√©es de test - leads avec des donn√©es plus r√©alistes
TEST_LEADS = [
    {
        "id": "test-lead-1",
        "company_name": "Restaurant Le Gourmet",
        "contact_name": "Jean Dupont",
        "email": "contact@legourmet.fr",
        "phone": "+33123456789",
        "website": "https://legourmet.fr",
        "address": "15 rue de la Gastronomie, 75001 Paris",
        "status": "new",
        "business_type": "Restaurant",
        "score": 85,
        "campaign_id": 1  # Utiliser l'ID de la campagne cr√©√©e
    },
    {
        "id": "test-lead-2",
        "company_name": "Boulangerie Miette",
        "contact_name": "Marie Martin",
        "email": "marie.martin@miette.fr",
        "phone": "+33987654321",
        "website": "https://boulangerie-miette.fr",
        "address": "27 avenue des Croissants, 75015 Paris",
        "status": "new",
        "business_type": "Boulangerie",
        "score": 78,
        "campaign_id": 1  # Utiliser l'ID de la campagne cr√©√©e
    },
    {
        "id": "test-lead-3",
        "company_name": "Caf√© Parisien",
        "contact_name": "Pierre Leroy",
        "email": "info@cafeparisien.fr",
        "phone": "+33645781245",
        "website": "https://cafe-parisien.fr",
        "address": "5 place de la R√©publique, 75011 Paris",
        "status": "new",
        "business_type": "Caf√©",
        "score": 92,
        "campaign_id": 1  # Utiliser l'ID de la campagne cr√©√©e
    }
]

def insert_test_leads():
    """
    Ins√®re des leads de test dans la base de donn√©es Berinia
    """
    if not INTEGRATION_AVAILABLE:
        print("‚ö†Ô∏è Module d'int√©gration non disponible. Test impossible.")
        return False
    
    print("üîç Test de connexion √† la base de donn√©es Berinia...")
    connection_success = test_berinia_connection()
    
    if not connection_success:
        print("‚ùå √âchec de la connexion √† la base de donn√©es")
        return False
    
    print("‚úÖ Connexion √† la base de donn√©es r√©ussie")
    
    # Ins√©rer les leads de test
    print(f"üîÑ Insertion de {len(TEST_LEADS)} leads de test...")
    export_result = export_leads_to_berinia(TEST_LEADS, campaign_id=1)  # Sp√©cifier l'ID de campagne explicitement
    
    if not export_result.get("success", False):
        print(f"‚ùå √âchec de l'insertion: {export_result.get('error', 'Erreur inconnue')}")
        return False
    
    print(f"‚úÖ Insertion r√©ussie: {export_result.get('leads_count', 0)} leads ins√©r√©s")
    print(f"üìä R√©sultats d√©taill√©s: {json.dumps(export_result, indent=2)}")
    
    return True

if __name__ == "__main__":
    print("=== Insertion de leads de test dans Berinia ===")
    print(f"üìÖ Date: {datetime.now().isoformat()}")
    
    success = insert_test_leads()
    
    print("\n=== R√©capitulatif ===")
    if success:
        print("‚úÖ Tous les leads ont √©t√© ins√©r√©s avec succ√®s")
        sys.exit(0)
    else:
        print("‚ùå L'insertion des leads a √©chou√©")
        sys.exit(1)
